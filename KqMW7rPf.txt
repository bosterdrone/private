local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Test Script",
    SubTitle = "by bosterdrone",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "Notification",
        Content = "This is a notification",
        SubContent = "SubContent", -- Optional
        Duration = 5 -- Set to nil to make the notification not disappear
    })

    Tabs.Main:AddParagraph({
        Title = "About",
        Content = "This is a private script you have acess to it because you are a tester"
    })

    Tabs.Main:AddButton({
        Title = "manual spam",
        Description = "Very important button",
        Callback = function()
            Window:Dialog({
                Title = "Title",
                Content = "This is a dialog",
                Buttons = {
                    {
                        Title = "Confirm",
                        Callback = function()
                            local gui = Instance.new("ScreenGui", game.CoreGui)
                            local frame = Instance.new("Frame")
                            local button = Instance.new("TextButton")

                            gui.ResetOnSpawn = false
                            frame.Size = UDim2.new(0, 150, 0, 75)
                            frame.Position = UDim2.new(0, 10, 0, 10)
                            frame.BackgroundColor3 = Color3.new(0, 0, 0)
                            frame.BorderSizePixel = 0
                            frame.Active = true
                            frame.Draggable = true
                            frame.Parent = gui

                            button.Text = "Off"
                            button.Size = UDim2.new(1, -20, 1, -20)
                            button.Position = UDim2.new(0, 10, 0, 10)
                            button.BackgroundColor3 = Color3.new(0, 0, 0)
                            button.BorderColor3 = Color3.new()
                            button.BorderSizePixel = 2
                            button.Font = Enum.Font.SourceSans
                            button.TextColor3 = Color3.new(1, 1, 1)
                            button.TextSize = 16
                            button.Parent = frame

                            local activated = false

                            local function toggle()
                                activated = not activated
                                button.Text = activated and "On" or "Off"
                                while activated do
                                    local args = {math.huge, CFrame.new(math.huge, math.huge, math.huge) * CFrame.Angles(math.huge, math.huge, math.huge), {[tostring(math.huge)] = Vector3.new(math.huge, math.huge, math.huge)}, {math.huge, math.huge}}
                                    game:GetService("ReplicatedStorage").Remotes.ParryAttempt:FireServer(unpack(args))
                                    game:GetService("RunService").Heartbeat:Wait()
                                end
                            end

                            button.MouseButton1Click:Connect(function()
                                toggle()
                            end)
                        end
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                            print("Cancelled the dialog.")
                        end
                    }
                }
            })
        end
    })
end
